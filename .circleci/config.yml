# CircleCI configuration file for Go project.
# @author - Ali Shanaakh.
#

version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.11
        environment:
          DATABASE_USER: root
          DATABASE_PASSWORD: circleci
          DATABASE_NAME: circleci
          DATABASE_PORT: 3306
          DATABASE_HOST: localhost
          GO111MODULE: "on"
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: amd64
      - image: circleci/mysql
        environment:
          MYSQL_ROOT_PASSWORD: circleci
          MYSQL_ROOT_HOST: '%'
          MYSQL_DATABASE: circleci
    working_directory: /go/src/github.com/palestine-nights/backend
    steps:
      - checkout

      - restore_cache:
          key: v1-pkg-cache

      - run:
          name: Install dependencies
          command: "go mod download"

      - save_cache:
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

      - run:
          name: Wait for database
          command: "dockerize -wait tcp://localhost:3306 -timeout 1m"

      - run:
          name: Test
          command: "go test -v ./..."

      - run:
          name: Lint code
          command: |
            go get -u golang.org/x/lint/golint
            golint -set_exit_status $(go list ./...)

      - run:
          name: Compile source code
          command: "go build src/*.go"
  push:
    machine: true
    steps:
      - checkout
      - run:
          name: Login in Dockerhub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run:
          name: Build docker image
          command: |
            docker build -t palestinenights/backend:$CIRCLE_BRANCH .
            docker build -t palestinenights/backend:$(echo $CIRCLE_SHA1 | cut -c -7) .
            docker build -t palestinenights/backend .
      - run:
          name: Push docker images
          command: |
            docker push palestinenights/backend:$CIRCLE_BRANCH
            docker push palestinenights/backend:$(echo $CIRCLE_SHA1 | cut -c -7)
            docker push palestinenights/backend

  release:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/palestine-nights/backend
    steps:
      - checkout
      - run:
          name: "Install swagger tools"
          command: |
            sudo apt-get update -y && sudo apt-get upgrade
            curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -
            sudo apt-get install nodejs
            sudo npm i -g swagger-markdown
            go get -u github.com/go-swagger/go-swagger/cmd/swagger

      - run:
          name: "Generate API documentation"
          command: |
            go get ./...
            swagger generate spec -m -b=./src -o docs/api.json
            swagger-markdown -i docs/api.json -o docs/api.md

      - run:
          name: "Push updated API documentation"
          command: |
            git config --global user.name "${BOT_USERNAME}"
            git config --global user.email "${BOT_EMAIL}"

            if ! git diff-index --quiet HEAD --; then
              git add --all
              git commit -m "[ci skip] Update documentation"

              git remote set-url origin https://${BOT_USERNAME}:${GITHUB_API_KEY}@github.com/palestine-nights/backend
              git push origin HEAD:${CIRCLE_BRANCH}
            fi

workflows:
  version: 2
  test-build:
    jobs:
      - test
      - push:
         requires:
           - test
         filters:
           branches:
             only: master
      - release:
         requires:
           - push
         filters:
           branches:
               only: master
